name: Validate

on:
  pull_request:

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:

  codeChecks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
      - name: Check Spotless
        run: ./gradlew spotlessCheck
      - name: Run Unit Tests
        run: ./gradlew test

  buildPlugin:
    runs-on: ubuntu-latest
    needs: codeChecks
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
      - name: Build plugin
        run: ./gradlew --no-configuration-cache buildPlugin
      - uses: actions/upload-artifact@v4.3.3
        id: artifact
        with:
          name: distributions
          path: build/distributions
      - uses: mshick/add-pr-comment@v2
        with:
          message-id: download-artifact-comment
          refresh-message-position: true
          message: |
            Artifact build on last commit: [distributions.zip](${{ steps.artifact.outputs.artifact-url }}). 
            For MacOS users: there is a zip inside this zip and Finder unzips them both at once. Use `unzip distributions.zip` from Terminal or [check solution for Archive Manager](https://apple.stackexchange.com/questions/443607/is-there-a-way-to-prevent-macoss-archive-utility-from-unarchiving-inner-zip-fil).

  runPluginVerifier:
    runs-on: ubuntu-latest
    needs: codeChecks
    strategy:
      matrix:
        version: [ "2024.1", "251.18673.35" ] #EAP - use specific version
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
      - name: Verify plugin
        run: ./gradlew --no-configuration-cache -PverifyVersion=${{ matrix.version }} verifyPlugin
      - uses: actions/upload-artifact@v4
        with:
          name: pluginVerifierReports-${{ matrix.version }}
          path: build/reports/pluginVerifier

  waitForResults:
    runs-on: ubuntu-latest
    needs: runPluginVerifier
    steps:
      - uses: actions/download-artifact@v4
      - name: Get result directories
        run: |
          DIRECTORIES=$(find . -name 'I*' | jq -R -s -c 'split("\n")[:-1]')
          echo "DIRECTORIES=$DIRECTORIES" >> $GITHUB_ENV
    outputs:
      directories: ${{ env.DIRECTORIES }}

  addComments:
    runs-on: ubuntu-latest
    needs: waitForResults
    strategy:
      matrix:
        dir: ${{fromJson(needs.waitForResults.outputs.directories)}}
    steps:
      - uses: actions/download-artifact@v4
      - run: |
          cat ${{ matrix.dir }}/report.md | head -n 3 | sed s/#/###/ > ${{ matrix.dir }}/report.short.md
      - name: Publish report
        uses: mshick/add-pr-comment@v2
        with:
          message-id: verify-plugin-comment-${{ matrix.dir }}
          refresh-message-position: true
          message-path: |
            ${{ matrix.dir }}/report.short.md
      - name: Fail on not compatible
        run: |
          if grep -q "Compatible." ${{ matrix.dir }}/report.short.md; then
            echo "✅ Compatible."
          else
            echo "❌ Not compatible!"
            exit 1
          fi
